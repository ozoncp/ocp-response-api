// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-response-api/internal/repo (interfaces: ResponseRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-response-api/internal/models"
)

// MockResponseRepo is a mock of ResponseRepo interface.
type MockResponseRepo struct {
	ctrl     *gomock.Controller
	recorder *MockResponseRepoMockRecorder
}

// MockResponseRepoMockRecorder is the mock recorder for MockResponseRepo.
type MockResponseRepoMockRecorder struct {
	mock *MockResponseRepo
}

// NewMockResponseRepo creates a new mock instance.
func NewMockResponseRepo(ctrl *gomock.Controller) *MockResponseRepo {
	mock := &MockResponseRepo{ctrl: ctrl}
	mock.recorder = &MockResponseRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponseRepo) EXPECT() *MockResponseRepoMockRecorder {
	return m.recorder
}

// AddResponses mocks base method.
func (m *MockResponseRepo) AddResponses(arg0 []models.Response) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddResponses", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddResponses indicates an expected call of AddResponses.
func (mr *MockResponseRepoMockRecorder) AddResponses(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddResponses", reflect.TypeOf((*MockResponseRepo)(nil).AddResponses), arg0)
}

// DescribeResponse mocks base method.
func (m *MockResponseRepo) DescribeResponse(arg0 uint64) (*models.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeResponse", arg0)
	ret0, _ := ret[0].(*models.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeResponse indicates an expected call of DescribeResponse.
func (mr *MockResponseRepoMockRecorder) DescribeResponse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeResponse", reflect.TypeOf((*MockResponseRepo)(nil).DescribeResponse), arg0)
}

// ListResponses mocks base method.
func (m *MockResponseRepo) ListResponses(arg0, arg1 uint64) ([]models.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResponses", arg0, arg1)
	ret0, _ := ret[0].([]models.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResponses indicates an expected call of ListResponses.
func (mr *MockResponseRepoMockRecorder) ListResponses(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResponses", reflect.TypeOf((*MockResponseRepo)(nil).ListResponses), arg0, arg1)
}

// RemoveResponse mocks base method.
func (m *MockResponseRepo) RemoveResponse(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveResponse", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveResponse indicates an expected call of RemoveResponse.
func (mr *MockResponseRepoMockRecorder) RemoveResponse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveResponse", reflect.TypeOf((*MockResponseRepo)(nil).RemoveResponse), arg0)
}
